/* @configure_input@ */
#ifndef a_util_h
#define a_util_h 1

#include <a/types.h>
#include <a/varg.h>
#include <a/cc.h>
#include <a/cpp.h>

#if @HAVE_STDLIB_H@
#	include <stdlib.h>
	/* for a_free */
#endif

/* nice to have null and size_t for folks */
#if @HAVE_STDDEF_H@
#	include <stddef.h>
#elif !defined(NULL)
#	define NULL	((void *)(0))
#endif

a_begin_c_decls_m

#define a_swap_xor_m(a,b)	do	\
{	\
	(a) ^= (b);	\
	(b) ^= (a);	\
	(a) ^= (b);	\
} while(0)
#define a_swap_xor_type_m(a,b,cast_type,result_type)	do	\
{	\
	(a) = (result_type)(((cast_type)(a))^((cast_type)(b)));	\
	(b) = (result_type)(((cast_type)(b))^((cast_type)(a)));	\
	(a) = (result_type)(((cast_type)(a))^((cast_type)(b)));	\
} while(0)
#define a_swap_xor_ptr_m(a,b,result_type)	a_swap_xor_type_m(a,b,uintptr_t,result_type)

char *a_basename(const char *path);
char *a_barename(const char *path);
size_t a_vsprintf_find_len(const char *fmt, va_list arg_list) A_CC_PRINTF(1,0);
size_t a_sprintf_find_len(const char *fmt, ...) A_CC_PRINTF(1,2);
char *a_vsprintf_malloc(const char *fmt, va_list arg_list) A_CC_PRINTF(1,0);
char *a_sprintf_malloc(const char *fmt, ...) A_CC_PRINTF(1,2);
char *a_strchomp(char *str);
char *a_chomp(char *str);
char *a_fullpath(const char *name);
char *a_strcat_realloc(char *orig, const char *add);
void *a_memcat_realloc(void *a, size_t a_len, const void *b, size_t b_len);

a_end_c_decls_m

#endif
