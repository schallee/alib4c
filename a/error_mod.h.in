/* @configure_input@ */
#ifndef error_mod_h
#define error_mod_h 1

#include <a/cpp.h>
#include <a/varg.h>
#include <a/types.h>

#ifdef a_error_h
#	error a/error.h should never be included before a/error_mod.h
#endif

a_begin_c_decls_m

/*********
 * types *
 *********/
typedef void *(* a_error_mod_add_t)(va_list *);
typedef void (* a_error_mod_free_t)(void *);
typedef char *(* a_error_mod_string_t)(void *, char *);

#ifndef A_ERROR_MOD_T_DECLARED
	typedef struct
	{
		a_mod_type_t type;
		a_error_mod_add_t add;
		a_error_mod_free_t free_arg;
		a_error_mod_string_t string;
	} a_error_mod_t;
#	define A_ERROR_MOD_T_DECLARED
#endif

/**********************
 * macros for modules *
 **********************/
#define a_error_arg_type_fits_m(type)		(sizeof(type) <= sizeof(void *))
#define a_error_arg_from_var_m(type, var)	(a_error_arg_type_fits_m(type) ? (void *)(var) : a_error_memdup(&(var), sizeof(type)))
#define a_error_arg_to_val_m(type, val)		(a_error_arg_type_fits_m(type) ? (type)(val) : *((type *)(val)))
#define a_error_arg_free_func_m(type)		(a_error_arg_type_fits_m(type) ? NULL : a_error_test_free)
#define a_error_mk_mod_add_func_proto_m(type)	\
	void *a_error_mod_add_ ## type(va_list  *args)
#define a_error_mk_mod_add_func_m(type)		a_error_mk_mod_add_func_name_m(type,type)
#define a_error_mk_mod_add_func_name_m(type, name)	\
	void *a_error_mod_add_ ## name(va_list  *args)	\
	{	\
		type tmp;	\
		\
		tmp = va_arg(*args, type);	\
		return a_error_arg_from_var_m(type, tmp);	\
	}

/*************************
 * functions for modules *
 *************************/
void *a_error_memdup(const void *in, size_t in_len);
void *a_error_realloc(void *ptr, size_t size);
char *a_error_strcat_realloc(char *orig, const char *add);
void a_error_test_free(void *ptr);

/* generic add routines */
a_error_mk_mod_add_func_proto_m(int);
a_error_mk_mod_add_func_proto_m(unsigned_long);
a_error_mk_mod_add_func_proto_m(error_t);

#if @OS_TYPE_WIN32@ && @HAVE_WINDOWS_H@
	a_error_mk_mod_add_func_proto_m(DWORD);
#endif

/* finally include the non-module stuff */
#include <a/error.h>

#endif
